!function(){"use strict";class t{constructor(t,e,s){let{title:r,url:i}=t;this._data={title:r,url:i},this._name=r,this._link=i,this._cardSelector=e,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._element=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle.textContent=this._data.title,this._cardImage.src=this._data.url,this._cardImage.title=this._data.title,this._setEventListeners(),this._cardElement}}var e=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((t=>t.validity.valid))}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableValidation(t){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners(this._form,t)}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((t=>{this._hideInputError(t)}))}};class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(t=>{t.target.classList.contains("modal_opened")&&this.close()}))}}var r=class extends s{constructor(t,e){let{popupSelector:s}=t;super({popupSelector:s}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputList=[...this._popupElement.querySelectorAll(".modal__input")]}_getInputValues(){return this._formValue={},this._inputList.forEach((t=>{this._formValue[t.name]=t.value})),this._formValue}setEventListeners(){this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._formValues=this._getInputValues(),this._handleFormSubmit(this._formValues),this._popupForm.reset()})),super.setEventListeners()}close(){super.close()}};const i={inputSelector:".modal__input",submitButtonSelector:".modal__button_submit",inactiveButtonClass:"modal__button_submit_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},o=document.querySelector("#form-edit-profile"),n=document.querySelector("#form-add-card"),a=document.querySelector("#profile-title-input"),l=document.querySelector("#profile-description-input"),c=document.querySelector("#profile-edit-button"),u=document.querySelector("#profile-add-button"),d=new class{constructor(t,e){let{items:s,renderer:r}=t;this._data=s,this._renderer=r,this._container=document.querySelector(e)}renderItems(){this._data.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{title:"Yosemite Valley",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{title:"Lake Louise",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{title:"Bald Mountains",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{title:"Latemar",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{title:"Vanoise National Park",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{title:"Lago di Braies",url:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const s=function(e){return new t(e,"#card-template",p).getView(e)}(e);d.addItem(s)}},".cards__list");d.renderItems();const _=new class{constructor(t){let{nameSelector:e,jobSelector:s}=t;this._name=document.querySelector(e),this._job=document.querySelector(s)}getUserInfo(){const t={};return t.name=this._name.textContent,t.description=this._job.textContent,t}setUserInfo(t){this._name.textContent=t.title,this._job.textContent=t.description}}({nameSelector:".profile__title",jobSelector:".profile__description"});function p(t){h.open(t)}const h=new class extends s{constructor(t){super(t),this._previewImage=this._popupElement.querySelector(".modal__image"),this._previewTitle=this._popupElement.querySelector(".modal__card_title")}open(t){this._previewImage.src=t.url,this._previewImage.alt=t.title,this._previewTitle.textContent=t.title,super.open()}close(){super.close()}}({popupSelector:"#preview-card-image-modal"});h.setEventListeners();const m=new r({popupSelector:"#add-card-modal"},(function(t){d._renderer(t),S._toggleButtonState(t),m.close()}));m.setEventListeners();const E=new r({popupSelector:"#profile-edit-button-modal"},(function(t){console.log(t),_.setUserInfo(t),v._toggleButtonState(t),E.close()}));E.setEventListeners();const v=new e(i,o),S=new e(i,n);v.enableValidation(),S.enableValidation(),c.addEventListener("click",(()=>{v.resetValidation();const t=_.getUserInfo();a.value=t.name,l.value=t.description,E.open()})),u.addEventListener("click",(()=>{S.resetValidation(),m.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFrQmpGLGlCQUFpQixTQUFTLEtBQzFDcUgsRUFBa0JuRSxrQkFDbEIsTUFBTXFFLEVBQWtCdEIsRUFBU0ksY0FDakN0QixFQUFrQlAsTUFBUStDLEVBQWdCaEQsS0FDMUNTLEVBQXdCUixNQUFRK0MsRUFBZ0JoQixZQUNoRFcsRUFBaUIxRCxNQUFNLElBR3pCMEIsRUFBd0JsRixpQkFBaUIsU0FBUyxLQUNoRGlILEVBQWlCL0Qsa0JBQ2pCNEQsRUFBYXRELE1BQU0sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgdGl0bGUsIHVybCB9LCBjYXJkU2VsZWN0b3IsIGhhbmRsZUltYWdlQ2xpY2spIHtcbiAgICB0aGlzLl9kYXRhID0geyB0aXRsZSwgdXJsIH07XG4gICAgdGhpcy5fbmFtZSA9IHRpdGxlO1xuICAgIHRoaXMuX2xpbmsgPSB1cmw7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vIERvdWJsZSBjaGVjayB0aGF0IHRoZXNlIGFyZSB0aGUgc2FtZVxuICAgIHRoaXMuX2NhcmRFbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKHRoaXMpO1xuICAgICAgfSk7XG5cbiAgICB0aGlzLl9jYXJkRWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQoKTtcbiAgICAgIH0pO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHRoaXMuX2RhdGEpO1xuICAgIH0pO1xuICB9XG5cbiAgX2hhbmRsZUxpa2VJY29uKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICBfaGFuZGxlRGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIGdldFZpZXcoKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX2RhdGEudGl0bGU7XG4gICAgdGhpcy5fY2FyZEltYWdlLnNyYyA9IHRoaXMuX2RhdGEudXJsO1xuICAgIHRoaXMuX2NhcmRJbWFnZS50aXRsZSA9IHRoaXMuX2RhdGEudGl0bGU7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm1FbGVtZW50O1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiAhdGhpcy5faW5wdXRFbHMuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsLCBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKG9wdGlvbnMpIHtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnModGhpcy5fZm9ybSwgb3B0aW9ucyk7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgLy8gZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBjb25zdCBfY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG4gICAgX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9vcGVuZWRcIikpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XG4gICAgdGhpcy5fcHJldmlld1RpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcmRfdGl0bGVcIik7XG4gIH1cblxuICBvcGVuKGRhdGEpIHtcbiAgICB0aGlzLl9wcmV2aWV3SW1hZ2Uuc3JjID0gZGF0YS51cmw7XG4gICAgdGhpcy5fcHJldmlld0ltYWdlLmFsdCA9IGRhdGEudGl0bGU7XG4gICAgdGhpcy5fcHJldmlld1RpdGxlLnRleHRDb250ZW50ID0gZGF0YS50aXRsZTtcblxuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBXaXRoSW1hZ2U7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0sIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gWy4uLnRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKV07XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybVZhbHVlID0ge307XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9mb3JtVmFsdWVbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWU7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5fZm9ybVZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2Zvcm1WYWx1ZXMpO1xuICAgICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XG4gICAgfSk7XG5cbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xuIiwiZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIHRpdGxlOiBcIllvc2VtaXRlIFZhbGxleVwiLFxuICAgIHVybDogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiTGFrZSBMb3Vpc2VcIixcbiAgICB1cmw6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4gICAgdXJsOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJMYXRlbWFyXCIsXG4gICAgdXJsOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxuICAgIHVybDogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuICAgIHVybDogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXG4gIH0sXG5dO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25fc3VibWl0XCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9zdWJtaXRfZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dC1lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXG59O1xuIiwiaW1wb3J0IFwiLi4vaW1hZ2VzL2phY3F1ZXMtY291c3RlYXUuanBnXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHsgaW5pdGlhbENhcmRzLCB2YWxpZGF0aW9uU2V0dGluZ3MgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgXCIuLy9pbmRleC5jc3NcIjtcblxuLy8gQ2FyZCBjbGFzcyBjb25zdGFudHNcbi8vIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKTtcbi8vIGNvbnN0IGNhcmRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcbi8vIGNhcmRUZW1wbGF0ZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQ7XG5cbi8vIGNvbnN0IHByZXZpZXdJbWFnZVBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcmV2aWV3LWNhcmQtaW1hZ2UtbW9kYWxcIik7XG4vLyBjb25zdCBhZGRDYXJkUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLW1vZGFsXCIpO1xuLy8gY29uc3QgcHJvZmlsZUVkaXRQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvbi1tb2RhbFwiKTtcblxuY29uc3QgZWRpdEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtLWVkaXQtcHJvZmlsZVwiKTtcbmNvbnN0IGFkZEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtLWFkZC1jYXJkXCIpO1xuXG4vLyBjb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xuLy8gY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIiNwcm9maWxlLWRlc2NyaXB0aW9uLWlucHV0XCJcbik7XG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IHByb2ZpbGVBZGROZXdDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWFkZC1idXR0b25cIik7XG5cbmNvbnN0IHNlY3Rpb24gPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoZGF0YSk7XG4gICAgICBzZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgIH0sXG4gIH0sXG4gIFwiLmNhcmRzX19saXN0XCJcbik7XG5zZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoZGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgXCIjY2FyZC10ZW1wbGF0ZVwiLCBoYW5kbGVJbWFnZUNsaWNrKTtcbiAgY29uc3QgY2FyZEVsID0gY2FyZC5nZXRWaWV3KGRhdGEpO1xuICByZXR1cm4gY2FyZEVsO1xufVxuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIG5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fdGl0bGVcIixcbiAgam9iU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXG59KTtcblxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhkYXRhKSB7XG4gIHByZXZpZXdJbWFnZU1vZGFsLm9wZW4oZGF0YSk7XG59XG5cbmNvbnN0IHByZXZpZXdJbWFnZU1vZGFsID0gbmV3IFBvcHVwV2l0aEltYWdlKHtcbiAgcG9wdXBTZWxlY3RvcjogXCIjcHJldmlldy1jYXJkLWltYWdlLW1vZGFsXCIsXG59KTtcbnByZXZpZXdJbWFnZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmNvbnN0IGFkZENhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICB7XG4gICAgcG9wdXBTZWxlY3RvcjogXCIjYWRkLWNhcmQtbW9kYWxcIixcbiAgfSxcbiAgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXRcbik7XG5hZGRDYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICB7XG4gICAgcG9wdXBTZWxlY3RvcjogXCIjcHJvZmlsZS1lZGl0LWJ1dHRvbi1tb2RhbFwiLFxuICB9LFxuICBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdFxuKTtcbnByb2ZpbGVFZGl0TW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcbiAgY29uc29sZS5sb2coaW5wdXRWYWx1ZXMpO1xuICB1c2VySW5mby5zZXRVc2VySW5mbyhpbnB1dFZhbHVlcyk7XG4gIGVkaXRGb3JtVmFsaWRhdG9yLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dFZhbHVlcyk7XG4gIHByb2ZpbGVFZGl0TW9kYWwuY2xvc2UoKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcbiAgc2VjdGlvbi5fcmVuZGVyZXIoaW5wdXRWYWx1ZXMpO1xuICBhZGRGb3JtVmFsaWRhdG9yLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dFZhbHVlcyk7XG4gIGFkZENhcmRNb2RhbC5jbG9zZSgpO1xufVxuXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXG4gIGVkaXRGb3JtRWxlbWVudFxuKTtcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGFkZEZvcm1FbGVtZW50KTtcblxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuICBjb25zdCBjdXJyZW50VXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5uYW1lO1xuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5kZXNjcmlwdGlvbjtcbiAgcHJvZmlsZUVkaXRNb2RhbC5vcGVuKCk7XG59KTtcblxucHJvZmlsZUFkZE5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbiAgYWRkQ2FyZE1vZGFsLm9wZW4oKTtcbn0pO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fZGF0YSA9IGl0ZW1zO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLl9kYXRhLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGpvYlNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgdXNlcnNDdXJyZW50SW5mbyA9IHt9O1xuICAgIHVzZXJzQ3VycmVudEluZm8ubmFtZSA9IHRoaXMuX25hbWUudGV4dENvbnRlbnQ7XG4gICAgdXNlcnNDdXJyZW50SW5mby5kZXNjcmlwdGlvbiA9IHRoaXMuX2pvYi50ZXh0Q29udGVudDtcbiAgICByZXR1cm4gdXNlcnNDdXJyZW50SW5mbztcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHVzZXJEYXRhKSB7XG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLnRpdGxlO1xuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IHVzZXJEYXRhLmRlc2NyaXB0aW9uO1xuICB9XG59XG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJ0aXRsZSIsInVybCIsInRoaXMiLCJfZGF0YSIsIl9uYW1lIiwiX2xpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfY2FyZEVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVMaWtlSWNvbiIsIl9oYW5kbGVEZWxldGVDYXJkIiwiX2NhcmRJbWFnZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsIl9lbGVtZW50IiwiZ2V0VmlldyIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsIl9jYXJkVGl0bGUiLCJ0ZXh0Q29udGVudCIsInNyYyIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwiYWRkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfaGFzSW52YWxpZElucHV0IiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiX2lucHV0RWxzIiwiZXZlcnkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZXZ0IiwiZW5hYmxlVmFsaWRhdGlvbiIsIm9wdGlvbnMiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRMaXN0IiwiX2dldElucHV0VmFsdWVzIiwiX2Zvcm1WYWx1ZSIsImlucHV0IiwibmFtZSIsInZhbHVlIiwiZSIsIl9mb3JtVmFsdWVzIiwicmVzZXQiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJlZGl0Rm9ybUVsZW1lbnQiLCJhZGRGb3JtRWxlbWVudCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVBZGROZXdDYXJkQnV0dG9uIiwic2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJkYXRhIiwiY2FyZEVsZW1lbnQiLCJjcmVhdGVDYXJkIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsIl9qb2IiLCJnZXRVc2VySW5mbyIsInVzZXJzQ3VycmVudEluZm8iLCJkZXNjcmlwdGlvbiIsInNldFVzZXJJbmZvIiwidXNlckRhdGEiLCJwcmV2aWV3SW1hZ2VNb2RhbCIsIl9wcmV2aWV3SW1hZ2UiLCJfcHJldmlld1RpdGxlIiwiYWx0IiwiYWRkQ2FyZE1vZGFsIiwiUG9wdXBXaXRoRm9ybSIsImlucHV0VmFsdWVzIiwiYWRkRm9ybVZhbGlkYXRvciIsInByb2ZpbGVFZGl0TW9kYWwiLCJjb25zb2xlIiwibG9nIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJGb3JtVmFsaWRhdG9yIiwiY3VycmVudFVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==