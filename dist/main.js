!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:i}=e;this._data={name:n,link:i},this._name=n,this._link=i,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._element=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle.textContent=this._data.name,this._cardImage.src=this._data.link,this._cardImage.alt=this._data.link,this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(e){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form,e)}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}var n=class extends s{constructor(e,t){let{popupSelector:s}=e;super({popupSelector:s}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=[...this._popupElement.querySelectorAll(".modal__input")]}_getInputValues(){return this._formValue={},this._inputList.forEach((e=>{this._formValue[e.name]=e.value})),this._formValue}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._formValues=this._getInputValues(),this._handleFormSubmit(this._formValues),this._popupForm.reset()})),super.setEventListeners()}close(){super.close()}};const i={inputSelector:".modal__input",submitButtonSelector:".modal__button_submit",inactiveButtonClass:"modal__button_submit_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},r=document.querySelector("#form-edit-profile"),o=document.querySelector("#form-add-card"),a=document.querySelector("#profile-title-input"),l=document.querySelector("#profile-description-input"),c=document.querySelector("#profile-edit-button"),u=document.querySelector("#profile-add-button"),d=new class{constructor(e,t){let{items:s,renderer:n}=e;this._data=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._data.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const s=function(t){return new e(t,"#card-template",m).getView(t)}(t);d.addItem(s)}},".cards__list");d.renderItems();const _=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._name=document.querySelector(t),this._job=document.querySelector(s)}getUserInfo(){const e={};return e.name=this._name.textContent,e.description=this._job.textContent,e}setUserInfo(e){this._name.textContent=e.name,this._job.textContent=e.description}}({nameSelector:".profile__title",jobSelector:".profile__description"});function m(e){p.open(e)}const p=new class extends s{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__image"),this._previewTitle=this._popupElement.querySelector(".modal__card_title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._previewTitle.textContent=e.name,super.open()}close(){super.close()}}({popupSelector:"#preview-card-image-modal"});p.setEventListeners();const h=new n({popupSelector:"#add-card-modal"},(function(e){d._renderer(e),S._toggleButtonState(e),h.close()}));h.setEventListeners();const E=new n({popupSelector:"#profile-edit-button-modal"},(function(e){_.setUserInfo(e),v._toggleButtonState(e),E.close()}));E.setEventListeners();const v=new t(i,r),S=new t(i,o);v.enableValidation(),S.enableValidation(),c.addEventListener("click",(()=>{v.resetValidation();const e=_.getUserInfo();a.value=e.name,l.value=e.description,E.open()})),u.addEventListener("click",(()=>{S.resetValidation(),h.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,