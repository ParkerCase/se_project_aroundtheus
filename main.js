!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this.isLiked=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClicks=r}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClicks(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}renderLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}deleteCard(){this._cardElement.remove(),this._element=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this.renderLikes(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableSubmit():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}disableSubmit(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableValidation(e){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this._form,e)}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}var r=class extends i{constructor(e,t){let{popupSelector:s}=e;super({popupSelector:s}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=[...this._popupElement.querySelectorAll(".modal__input")],this._submitBtn=this._popupElement.querySelector(".modal__button_submit"),this._submitBtnText=this._submitBtn.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()})),super.setEventListeners()}close(){super.close()}};const n={inputSelector:".modal__input",submitButtonSelector:".modal__button_submit",inactiveButtonClass:"modal__button_submit_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__error_visible"},o=document.querySelector("#form-edit-profile"),a=document.querySelector("#form-add-card"),l=document.querySelector("#form-avatar"),d=document.querySelector("#profile-edit-button"),c=document.querySelector("#profile-add-button"),h=document.querySelector("#avatar-button"),u=document.querySelector("#profile-title-input"),_=document.querySelector("#profile-description-input");let m;document.querySelector("#modal-input-type-title"),document.querySelector("#modal-input-type-url"),document.querySelector("#modal-input-type-avatar"),document.querySelector("#delete-card-button");const p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleRes(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getCurrentUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleRes)}updateProfileInfo(e){let{title:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleRes)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleRes)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleRes)}createACard(e){let{title:t,url:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleRes)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleRes)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({isLiked:!0})}).then(this._handleRes)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers,body:JSON.stringify({isLiked:!1})}).then(this._handleRes)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"77570098-8218-4305-94d2-93e61885b891","Content-Type":"application/json"}}),v=new class extends i{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__image"),this._previewTitle=this._popupElement.querySelector(".modal__card_title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=e.name,this._previewTitle.textContent=e.name,super.open()}close(){super.close()}}({popupSelector:"#preview-card-image-modal"});v.setEventListeners();const b=new r({popupSelector:"#add-card-modal"},(function(e){b.renderLoading(!0),p.createACard(e).then((e=>{C(e),b.close(),a.resetValidation(),q.disableSubmit()})).catch((e=>{console.log(e)})).finally((()=>{b.renderLoading(!1)}))}));b.setEventListeners();const E=new r({popupSelector:"#profile-edit-button-modal"},(function(e){E.renderLoading(!0),p.updateProfileInfo(e).then((e=>{L.setUserInfo(e),E.close(),o.resetValidation(),I.disableSubmit()})).catch((e=>{console.log(e)})).finally((()=>{E.renderLoading(!1)}))}));E.setEventListeners();const S=new class extends i{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form")}handleDelete(e){this._handleDeleteSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()}))}}("#confirm-delete-modal");S.setEventListeners();const f=new r({popupSelector:"#change-avatar-modal"},(function(e){f.renderLoading(!0),p.updateAvatar(e).then((e=>{L.setAvatarInfo(e),f.close(),B.disableSubmit()})).catch((e=>{console.log(e)})).finally((()=>{f.renderLoading(!1)})),console.log(e)}));f.setEventListeners();const L=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._name=document.querySelector(t),this._job=document.querySelector(s),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._name.textContent,about:this._job.textContent}}setUserInfo(e){this._name.textContent=e.name,this._job.textContent=e.about}setAvatarInfo(e){this._avatar.src=e.avatar}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"});function y(e){v.open(e)}function k(e){e.isLiked&&p.dislikeCard(e._id).then((t=>{e.isLiked=t.isLiked,e.renderLikes()})).catch((e=>{console.log(e)})),e.isLiked||p.likeCard(e._id).then((t=>{e.isLiked=t.isLiked,e.renderLikes()})).catch((e=>{console.log(e)}))}function g(e){S.open(),console.log(e._id),S.handleDelete((()=>{p.deleteCard(e._id).then((()=>{e.deleteCard(),S.close()})).catch((e=>{console.error(e)}))}))}function C(t){const s=new e(t,"#card-template",y,g,k).getView();m.addItem(s)}p.getCurrentUserInfo().then((e=>{L.setAvatarInfo(e),L.setUserInfo({name:e.name,about:e.about})})).catch((e=>{console.log(e)})),p.getInitialCards().then((e=>{m=new s({items:e,renderer:C},".cards__list"),m.renderItems(e)})).catch((e=>{console.log(e)})),d.addEventListener("click",(()=>{I.resetValidation();const e=L.getUserInfo();u.value=e.name,_.value=e.about,E.open()})),c.addEventListener("click",(()=>{q.resetValidation(),b.open()})),h.addEventListener("click",(()=>{f.open()}));const I=new t(n,o),q=new t(n,a),B=new t(n,l);I.enableValidation(),q.enableValidation(),B.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,